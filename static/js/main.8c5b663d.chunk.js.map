{"version":3,"sources":["ListContainer.js","ListContainer2.js","AppBar.js","Nextline.js","Todos.js","App.js","reportWebVitals.js","index.js"],"names":["ListContainer","ListContainer2","schedule","info","periods2","periods3","day","setIndex","setMax","index","now","useEffect","twoLine","style","use","map","a","b","classStart","moment","split","classEnd","graphic","icon","text","secondaryText","selected","isBefore","subtract","AppBar","page","setPage","max","React","useState","open","setOpen","title","navigationIcon","onNav","actionItems","onClick","evt","disabled","modal","onClose","wrapFocus","Nextline","Todos","_index","weekYear","year","week","dayYear","dayOfYear","input","createRef","inputName","dialog","mdDateTimePicker","add","temp","setTemp","weekNow","confirmOpen","setConfirmOpen","tasks","setTasks","currentID","setCurrentID","storedTasks","JSON","parse","localStorage","getItem","setItem","stringify","sorted","filter","date","sort","arrangedByWeek","currentWeek","i","length","push","console","log","arrangedByDay","currentDay","class","days","nonInteractive","defaultOpen","handle","format","task","onClickNHold","e","f","nativeEvent","preventDefault","time","name","checked","onChange","newTasks","todo","find","handleCzech","label","ref","onFocus","current","querySelector","classList","trailingIcon","document","remove","toggle","addEventListener","target","parentNode","value","readOnly","action","isDefaultAction","newTask","handleAddTodo","raised","detail","onClosed","body","acceptLabel","scheduleExam","App","k","setNow","setInterval","Date","getDay","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8c5b663d.chunk.js","sourcesContent":["import {List, SimpleListItem} from '@rmwc/list'\r\nimport '@rmwc/list/styles';\r\nimport { useEffect, useState } from 'react';\r\nimport moment from 'moment'\r\n\r\nfunction ListContainer( {schedule, info, periods, day, setMax, setIndex, index, now} ){\r\n    useEffect(() => setIndex(day === 0 || day === 6 ? 0 : day - 1), [])\r\n\r\n    return (\r\n        <List twoLine>\r\n            {\r\n                \r\n                schedule[index + 1].map((a, b) => {\r\n                    var classStart = moment(periods[b].split('-')[0],'hhmm');\r\n                    var classEnd = moment(periods[b].split('-')[1],'hhmm');\r\n                    \r\n                    return (\r\n                        <SimpleListItem\r\n                            graphic={info[a].icon}\r\n                            text={a}\r\n                            secondaryText={periods[b]}\r\n                            selected={index === day - 1 && now.isBefore(classEnd) && classStart.subtract(10, 'minutes').isBefore(now)}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default ListContainer","import {List, SimpleListItem} from '@rmwc/list'\r\nimport '@rmwc/list/styles';\r\nimport { useEffect, useState } from 'react';\r\nimport moment from 'moment'\r\nimport {Typography} from '@rmwc/typography'\r\n\r\nfunction ListContainer2( {schedule, info, periods2, periods3, day, setMax, setIndex, index, now} ){\r\n    useEffect(() => setIndex(day === 0 || day === 6 ? 0 : day - 1), [])\r\n\r\n    return (\r\n        <>\r\n        <List twoLine style={{'margin-top': '8px'}}>\r\n        <Typography use=\"subtitle2\" style={{'margin-left': '16px'}}>\r\n                      Tuesday\r\n                      </Typography>\r\n            {\r\n                \r\n                schedule[2].map((a, b) => {\r\n                    var classStart = moment(periods2[b].split('-')[0],'hhmm');\r\n                    var classEnd = moment(periods2[b].split('-')[1],'hhmm');\r\n                    \r\n                    return (\r\n                        <SimpleListItem\r\n                            graphic={info[a].icon}\r\n                            text={a}\r\n                            secondaryText={periods2[b]}\r\n                            selected={index === day - 1 && now.isBefore(classEnd) && classStart.subtract(10, 'minutes').isBefore(now)}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n\r\n        </List>\r\n        \r\n        <List twoLine style={{'margin-top': '8px'}}>\r\n        <Typography use=\"subtitle2\" style={{'margin-left': '16px'}}>\r\n                      Wednesday\r\n                      </Typography>\r\n        {\r\n            \r\n            schedule[3].map((a, b) => {\r\n                var classStart = moment(periods3[b].split('-')[0],'hhmm');\r\n                var classEnd = moment(periods3[b].split('-')[1],'hhmm');\r\n                \r\n                return (\r\n                    <SimpleListItem\r\n                        graphic={info[a].icon}\r\n                        text={a}\r\n                        secondaryText={periods3[b]}\r\n                        selected={index === day - 1 && now.isBefore(classEnd) && classStart.subtract(10, 'minutes').isBefore(now)}\r\n                    />\r\n                )\r\n            })\r\n        }\r\n\r\n    </List>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default ListContainer2","import '@rmwc/top-app-bar/styles';\r\nimport {SimpleTopAppBar, TopAppBarFixedAdjust} from '@rmwc/top-app-bar'\r\nimport {Drawer, DrawerContent} from '@rmwc/drawer'\r\nimport {List, ListItem} from '@rmwc/list'\r\nimport React from 'react';\r\nimport '@rmwc/drawer/styles';\r\nimport '@rmwc/list/styles';\r\nfunction AppBar({page, setPage,setMax, max, index, setIndex}){\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    function handleBefore(evt){\r\n      setIndex(a => a - 1)\r\n    }\r\n\r\n    function handleNext(evt){\r\n      setIndex(a => a + 1)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <SimpleTopAppBar\r\n    title={page}\r\n    navigationIcon\r\n    onNav={() => setOpen(true)}\r\n    actionItems={ [\r\n      { icon: 'navigate_before', onClick: handleBefore, disabled: (index === 0) },\r\n      { icon: 'navigate_next', onClick: handleNext, disabled: (index === max) }\r\n    ]}\r\n\r\n  />\r\n  <TopAppBarFixedAdjust />\r\n  <Drawer modal open={open} onClose={() => setOpen(false)}>\r\n\r\n        <DrawerContent>\r\n          <List wrapFocus={false}>\r\n            <ListItem onClick={() => {setPage(\"Schedule\"); setMax(4)}} selected={page === \"Schedule\"}>Schedule</ListItem>\r\n            <ListItem onClick={() => {setPage(\"Todos\")}} selected={page === \"Todos\"}>Todos</ListItem>\r\n          </List>\r\n        </DrawerContent>\r\n      </Drawer>\r\n        </>\r\n    )\r\n}\r\nexport default AppBar\r\n\r\n","function Nextline(){\r\n    return (<br></br>)\r\n}\r\n\r\nexport default Nextline","import {CollapsibleList, ListItem, ListItemMeta} from '@rmwc/list'\r\nimport {TextField} from '@rmwc/textfield'\r\nimport {Icon} from '@rmwc/icon'\r\n\r\n\r\nimport {Typography} from '@rmwc/typography'\r\nimport {Checkbox} from '@rmwc/checkbox'\r\nimport mdDateTimePicker from 'md-date-time-picker'\r\nimport '@rmwc/list/styles';\r\nimport '@rmwc/checkbox/styles';\r\n\r\nimport '@rmwc/textfield/styles';\r\nimport {Fab} from '@rmwc/fab'\r\nimport {useState, createRef, useEffect} from 'react'\r\nimport {Dialog, DialogTitle, DialogContent, DialogButton, DialogActions, SimpleDialog} from '@rmwc/dialog'\r\nimport '@rmwc/dialog/styles';\r\nimport '@rmwc/fab/styles';\r\nimport '@rmwc/typography/styles';\r\nimport '@rmwc/icon/styles';\r\nimport Nextline from './Nextline'\r\nimport moment from 'moment'\r\nimport ClickNHold from 'react-click-n-hold'; \r\n\r\nfunction Todos({setMax, _index, setIndex}){\r\n  const weekYear = function(a){\r\n    return a.year() * 100 + a.week()\r\n  }\r\n  const dayYear = function(a){\r\n    return a.year() * 1000 + a.dayOfYear()\r\n  }\r\n    var input = createRef()\r\n    var inputName = createRef()\r\n    var dialog = new mdDateTimePicker({\"type\": \"date\", \"past\": moment(), \"future\": moment().add(3, 'years')})\r\n    const [temp, setTemp] = useState();\r\n    const [open, setOpen] = useState(false)\r\n    const weekNow = weekYear(moment())\r\n    const [confirmOpen, setConfirmOpen] = useState(false)\r\n    const [tasks, setTasks] = useState([]);\r\n    const [currentID, setCurrentID] = useState('')\r\n    \r\n\r\n    useEffect(() => {\r\n      const storedTasks = JSON.parse(localStorage.getItem('tasks'))\r\n      if(storedTasks) setTasks(storedTasks)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n      localStorage.setItem('tasks', JSON.stringify(tasks))\r\n    }, [tasks])\r\n\r\n    const filtered = tasks.filter(a =>　weekNow <= weekYear(moment(a.date)))\r\n\r\n\r\n    const sorted = filtered.sort((a, b) => dayYear(moment(a.date)) - dayYear(moment(b.date)))\r\n\r\n    var arrangedByWeek = [], currentWeek = 0, index = -1;\r\n\r\n    for(var i = 0; i < sorted.length; i++){\r\n      if(weekYear(moment(sorted[i].date)) > currentWeek){\r\n        currentWeek = weekYear(moment(sorted[i].date));\r\n        index ++;\r\n        arrangedByWeek[index] = [];\r\n      }\r\n\r\n      arrangedByWeek[index].push(sorted[i])\r\n      \r\n    }\r\n\r\n    console.log(arrangedByWeek, 'week')\r\n\r\n    var arrangedByDay = arrangedByWeek.map(a => {\r\n      var arrangedByDay = [], currentDay = 0, index = -1;\r\n\r\n      for(var i = 0; i < a.length; i++){\r\n        if(dayYear(moment(a[i].date)) > currentDay){\r\n          currentDay = dayYear(moment(a[i].date));\r\n          index ++;\r\n          arrangedByDay[index] = [];\r\n        }\r\n\r\n        arrangedByDay[index].push(a[i])\r\n      \r\n      }\r\n\r\n      return arrangedByDay\r\n    })\r\n\r\n    console.log(arrangedByDay)\r\n    setMax(arrangedByDay.length - 1 < 0 ? 0 : arrangedByDay.length - 1)\r\n\r\n    function handleCzech(date){\r\n\r\n      const newTasks = [...tasks]\r\n      const todo = newTasks.find(a => a.date === date)\r\n      todo.checked = !todo.checked\r\n      setTasks(newTasks)\r\n\r\n      \r\n    }\r\n\r\n    function handleConfirm(){\r\n      setConfirmOpen(true);\r\n    }\r\n\r\n    function handleAddTodo(){\r\n      var newTask = \r\n      {\r\n        date: temp,\r\n        checked: false,\r\n        name: inputName.current.querySelector('input').value\r\n      }\r\n\r\n      input.current.querySelector('input').value = inputName.current.querySelector('input').value = ''\r\n      setTasks([...tasks, newTask])\r\n      console.log(tasks)\r\n    }\r\n\r\n      \r\n    \r\n\r\n    \r\n    \r\n    return(\r\n        <>\r\n      <div class=\"list\">\r\n        { tasks.length === 0? null: arrangedByDay[_index].map(days => {\r\n            return (\r\n              <CollapsibleList\r\n                nonInteractive\r\n                defaultOpen={true}\r\n                handle={\r\n                  <ListItem>\r\n                    <Typography use=\"subtitle2\">\r\n                      { moment(days[0].date).week() === weekNow ? \r\n                        moment(days[0].date).format('ddd') : \r\n                        `${moment(days[0].date).format('M')}/${moment(days[0].date).format('D')} (${moment(days[0].date).format('ddd')})`\r\n                      }\r\n                      </Typography>\r\n\r\n                  </ListItem>\r\n                }\r\n              >\r\n                {\r\n                  days.map(task => {\r\n                    return (\r\n                      <ClickNHold onClickNHold={(e, f) => {\r\n                          f.nativeEvent.preventDefault();\r\n                          setCurrentID(task.date);\r\n                          setConfirmOpen(true);  \r\n                        }} time={0.4}>\r\n                      <ListItem >\r\n                        {task.name}\r\n                        <ListItemMeta>\r\n                          <Checkbox checked={task.checked} onChange={() => handleCzech(task.date)}  />\r\n                        </ListItemMeta>\r\n                      </ListItem>\r\n                      </ClickNHold>\r\n                    )\r\n                  })\r\n                }\r\n              </CollapsibleList>\r\n            )\r\n          })\r\n          \r\n        }\r\n      </div>\r\n  <Dialog\r\n        open={open}\r\n        onClose={evt => {\r\n          setOpen(false);\r\n        }}\r\n      >\r\n        <DialogTitle>Add Todo</DialogTitle>\r\n        <DialogContent>\r\n        <TextField label=\"Name\" ref={inputName} onFocus={() => inputName.current.querySelector('.mdc-floating-label').classList.add('mdc-floating-label--float-above')}/>\r\n        <Nextline />\r\n        <TextField trailingIcon={{\r\n      icon: 'event',\r\n      onClick: (e) => {\r\n        e.preventDefault()\r\n        \r\n                document.querySelector('.mddtp-picker__subtitle').classList.remove('mddtp-picker__color--active');\r\n                document.querySelector('.mddtp-picker__title').classList.add('mddtp-picker__color--active')\r\n                \r\n\r\n          \r\n          dialog.toggle(); \r\n          document.querySelector('#mddtp-date__ok').addEventListener('click', () => {\r\n            \r\n            e.target.parentNode.querySelector('input').value = dialog.time.format(\"ddd[,] MMM D\")\r\n            e.target.parentNode.querySelector('.mdc-floating-label').classList.add('mdc-floating-label--float-above')\r\n            setTemp(dialog.time.format())\r\n            })\r\n        }\r\n    }} ref={input} label=\"Date\" readOnly />\r\n    \r\n    \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <DialogButton action=\"close\">Cancel</DialogButton>\r\n          <DialogButton action=\"accept\" isDefaultAction onClick={() => handleAddTodo()}>\r\n            Add\r\n          </DialogButton>\r\n        </DialogActions>\r\n      </Dialog>\r\n      \r\n      <Fab raised icon=\"add\" onClick={() => {\r\n        setOpen(true);\r\n        input.current.querySelector('.mdc-floating-label').classList.remove('mdc-floating-label--float-above')\r\n        inputName.current.querySelector('.mdc-floating-label').classList.remove('mdc-floating-label--float-above')\r\n      }\r\n\r\n      \r\n      \r\n      \r\n        \r\n        } \r\n      />\r\n      <SimpleDialog open={confirmOpen} \r\n      onClose={(evt) => (evt.detail.action === 'accept' && setTasks(a => a.filter(b => b.date !== currentID)))} \r\n      onClosed={() => setConfirmOpen(false)} \r\n      body={<span>Do you want to delete the task?</span>} \r\n      title={<span>Confirm</span>}\r\n      acceptLabel={'Yes'}/>\r\n      \r\n    </>\r\n  )\r\n}\r\nexport default Todos","\nimport ListContainer from './ListContainer.js'\nimport ListContainer2 from './ListContainer2.js'\nimport 'material-icons/iconfont/material-icons.css';\nimport AppBar from './AppBar.js'\nimport Todos from './Todos.js'\nimport React from 'react'\nimport moment from 'moment'\n\nimport './mdDateTimePicker.css'\n\nconst schedule = {\n  1: [\"Experiment\", \"Experiment\", \"Technology\", \"Mathematics\", \"Electives\", \"Electives\", \"Undecided\"],\n  2: [\"Mathematics\", \"Mathematics\", \"Music\", \"English\", \"Chinese\", \"Geography\", \"Sports\"],\n  3: [\"Physics\", \"Physics\", \"Geology\", \"English\", \"Undecided\", \"Club\", \"Class Activity\"],\n  4: [\"Geology\", \"Chinese\", \"Third Language\", \"Geography\", \"Mathematics\", \"English\", \"Art\"],\n  5: [\"Geography\", \"Sports\", \"English\", \"Geology\", \"Chinese\", \"Chinese\", \"Guidance\"],\n} \n\nconst scheduleExam = {\n  2: [\"Mathematics\", \"Geology\", \"English\"],\n  3: [\"Geography\", \"Literature\", \"Physics\"]\n}\n\nconst exam = true;\n\nconst info = {\n  \"Experiment\": {\n    \"icon\": \"science\",\n  },\n  \"Geology\": {\n    \"icon\": \"travel_explore\",\n  },\n  \"Class Meeting\": {\n    \"icon\": \"question_answer\"\n  },\n  \"Technology\": {\n    \"icon\": \"build\",\n  },\n  \"Information\": {\n    \"icon\": \"computer\"\n  },\n  \"Mathematics\": {\n    \"icon\": \"calculate\",\n  },\n  \"Electives\": {\n    \"icon\": \"class\",\n  },\n  \"Club\": {\n    \"icon\": \"group\",\n  },\n  \"Music\": {\n    \"icon\": \"music_note\",\n  },\n  \"English\": {\n    \"icon\": \"language\",\n  },\n  \"Literature\": {\n    \"icon\": \"book\",\n  },\n  \"Geography\": {\n    \"icon\": \"terrain\",\n  },\n  \"Sports\": {\n    \"icon\": \"sports_tennis\",\n  },\n  \"Physics\": {\n    \"icon\": \"analytics\",\n  },\n  \"Third Language\": {\n    \"icon\": \"language\",\n  },\n  \"Art\": {\n    \"icon\": \"palette\",\n  },\n  \"Guidance\": {\n    \"icon\": \"follow_the_signs\",\n  },\n}\n\nconst periods = [\"8:10 - 9:00\", \"9:10 - 10:00\", \"10:10 - 11:00\", \"11:10 - 12:00\", '13:10 - 14:00', '14:10 - 15:00', '15:20 - 16:10']\nconst periods2 = [\"8:10 - 9:20\", \"9:30 - 10:30\", \"14:40 - 15:50\"]\nconst periods3 = [\"8:10 - 9:10\", \"10:50 - 12:00\", \"14:40 - 15:50\"]\nfunction App() {\n  const [page, setPage] = React.useState('Schedule')\n  const [index, setIndex] = React.useState(0)\n  const [max, setMax] = React.useState(4)\n  const setPage2 = (a) => {setPage(a); setIndex(0)}\n  var [k, setNow] = React.useState(moment())\n  React.useEffect(() => setInterval(() => {console.log('mounted'); setNow(moment())}, 2000), [])\n  \n  \n  \n  return (\n    <>\n    <AppBar page={page} setPage={setPage2} setMax={setMax} setIndex={setIndex} index={index} max={max} />\n    {\n      page === \"Schedule\" ? \n        exam === true ? \n        <ListContainer2 info={info} schedule={scheduleExam} day={new Date().getDay()} periods2={periods2} periods3={periods3} now={k} setMax={setMax} setIndex={setIndex} index={index} />\n        :\n        (<ListContainer info={info} schedule={schedule} day={new Date().getDay()} periods={periods} now={k} setMax={setMax} setIndex={setIndex} index={index} />)\n      \n        \n       : \n      (\n        <Todos setMax={setMax} _index={index} setIndex={setIndex} />\n      )\n    }\n    \n    </>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}